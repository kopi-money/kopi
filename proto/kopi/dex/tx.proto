syntax = "proto3";

package kopi.dex;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "kopi/dex/order.proto";
import "kopi/dex/params.proto";
import "kopi/dex/discount_level.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/kopi-money/kopi/x/dex/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc AddLiquidity    (MsgAddLiquidity) returns (MsgAddLiquidityResponse);
  rpc RemoveLiquidity (MsgRemoveLiquidity) returns (MsgRemoveLiquidityResponse);
  rpc Trade           (MsgTrade) returns (MsgTradeResponse);

  // this line is used by starport scaffolding # proto/tx/rpc
  rpc RemoveAllLiquidityForDenom (MsgRemoveAllLiquidityForDenom) returns (Void);
  rpc AddOrder                   (MsgAddOrder) returns (Order);
  rpc RemoveOrder                (MsgRemoveOrder) returns (Void);
  rpc RemoveOrders               (MsgRemoveOrders) returns (Void);
  rpc UpdateOrder                (MsgUpdateOrder) returns (Order);

  rpc UpdateTradeFee              (MsgUpdateTradeFee) returns (Void);
  rpc UpdateOrderFee              (MsgUpdateOrderFee) returns (Void);
  rpc UpdateReserveShare          (MsgUpdateReserveShare) returns (Void);
  rpc UpdateVirtualLiquidityDecay (MsgUpdateVirtualLiquidityDecay) returns (Void);
  rpc UpdateFeeReimbursement      (MsgUpdateFeeReimbursement) returns (Void);
  rpc UpdateMaxOrderLife          (MsgUpdateMaxOrderLife) returns (Void);
  rpc UpdateTradeAmountDecay      (MsgUpdateTradeAmountDecay) returns (Void);
  rpc UpdateDiscountLevels        (MsgUpdateDiscountLevels) returns (Void);
}

message MsgUpdateDiscountLevels {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/MsgUpdateTradeAmountDecay";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  repeated DiscountLevel discount_levels = 2;
}

message MsgUpdateTradeAmountDecay {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/MsgUpdateTradeAmountDecay";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string trade_amount_decay = 2;
}

message MsgUpdateMaxOrderLife {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/MsgUpdateMaxOrderLife";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  uint64 max_order_life = 2;
}

message MsgUpdateFeeReimbursement {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/MsgUpdateFeeReimbursement";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string fee_reimbursement = 2;
}

message MsgUpdateVirtualLiquidityDecay {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/UpdateVirtualLiquidityDecay";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string virtual_liquidity_decay = 2;
}

message MsgUpdateReserveShare {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/MsgUpdateReserveShare";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string reserve_share = 2;
}

message MsgUpdateTradeFee {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/MsgUpdateTradeFee";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string trade_fee = 2;
}

message MsgUpdateOrderFee {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/dex/MsgUpdateOrderFee";
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string order_fee = 2;
}

message Void {}

message MsgUpdateParamsResponse {}

message MsgAddLiquidity {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
  string amount = 3;
}

message MsgAddLiquidityResponse {}

message MsgRemoveLiquidity {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
  string amount = 3;
}

message MsgRemoveLiquidityResponse {}

message MsgTrade {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom_from = 2;
  string denom_to = 3;
  string amount = 4;
  string max_price = 5;
  bool allow_incomplete = 6;
}

message MsgTradeResponse {
  int64 amount_used = 1;
  int64 amount_received = 2;
}

// this line is used by starport scaffolding # proto/tx/message
message MsgRemoveAllLiquidityForDenom {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
}

message MsgAddOrder {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom_from = 2;
  string denom_to = 3;
  string amount = 4;
  string trade_amount = 5;
  string max_price = 6;
  uint64 blocks = 7;
  uint64 interval = 8;
  bool allow_incomplete = 9;
}

message MsgRemoveOrder {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  uint64 index = 2;
}

message MsgRemoveOrders {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
}

message MsgUpdateOrder {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  uint64 index = 2;

  string amount = 3;
  string trade_amount = 4;
  string max_price = 5;
}
